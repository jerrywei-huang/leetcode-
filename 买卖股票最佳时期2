"""
给你一个整数数组 prices ，其中 prices[i] 表示某支股票第 i 天的价格。

在每一天，你可以决定是否购买和/或出售股票。你在任何时候 最多 只能持有 一股 股票。你也可以先购买，然后在 同一天 出售。

返回 你能获得的 最大 利润 。

可以多次购买股票
示例 1：

输入：prices = [7,1,5,3,6,4]
输出：7
解释：在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5 - 1 = 4 。
     随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6 - 3 = 3 。
     总利润为 4 + 3 = 7 。

"""

from typing import List
class Solution:
    def maxProfit(self,prices:List[int]) -> int:
        profit=0
        for i in range(1,len(prices)):
            tmp=prices[i] - prices[i-1] #计算第i天和第i-1天的差值
            if tmp>0:
                profit+=tmp  #若差值为正，则为盈利，进行累加。
                #股票交易的问题逻辑：只有股价上涨时才盈利；若股价不变或者降低则不是盈利
        return profit
sol = Solution()
res = sol.maxProfit([2,3,4,7,1,2,10])
print(res)
