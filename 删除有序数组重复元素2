"""
给你一个有序数组 nums ，请你 原地 删除重复出现的元素，使得出现次数超过两次的元素只出现两次 ，返回删除后数组的新长度。

不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。
"""
class Solution(object):
    def removeDuplicates(self, nums):
        """
       在数组中slow和fast一开始都指向0位置，遇到重复数字，slow停在第三个位置，fast继续向后
       遍历，直到找到与slow不一样的数字，之后将fast指向的数字放到slow指向的数字的位置
       """ 
        slow = 0
        for fast in range(len(nums)):
            if slow < 2 or nums[fast] != nums[slow - 2]:
                nums[slow] = nums[fast]
                slow += 1
        return slow

