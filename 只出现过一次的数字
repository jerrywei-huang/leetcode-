"""
给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。

你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。
"""

"""
异或运算：两个相同的数字异或运算结果为0。将nums中所有数字进行异或运算，留下来的结果就是
          出现过一次的数字
"""
from typing import List
class Solution:
    def singleNumber(self,nums:List[int]) -> int:
        x=0
        for i in nums:
            x ^= i
        return x
