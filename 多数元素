"""
给定一个大小为 n 的数组 nums ，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。

你可以假设数组是非空的，并且给定的数组总是存在多数元素。
"""
#方法一
from typing import List

class Solution:
    def majorityElement(self, nums: List[int]) -> int: #采用摩尔投票法，它是一种找出数组中出现次数超过一半的主要元素的有效算法
        count = 1   #用于计数候选元素的出现次数
        candidate = nums[0]  #用于保存当前的候选元素,从第一个元素开始记录

        for i in range(1, len(nums)): #循环中，我们从数组的第二个元素（索引 1）开始遍历
            if count == 0:
                #如果 count 为零，说明当前的 candidate 不再是候选元素，需要更新为当前元素 nums[i]。
                candidate = nums[i]
            
            if nums[i] == candidate:
                count += 1
            else:
                count -= 1

        return candidate

# 示例使用
sol = Solution()
res = sol.majorityElement([3, 3, 4])
print(res)

#方法二
def major(nums:List[int]):
    count=1
    candidate = nums[0]
    for i in range(1,len(nums)):
        if nums[i] == candidate:
            count+=1
        else:
            count-=1
        if count == 0:
            candidate=nums[i]
    return candidate
maj=major([3,3,4])
print(maj)
