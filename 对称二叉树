"""
给你一个二叉树的根节点 root ， 检查它是否轴对称。

"""

# Definition for a binary tree node.
#判断的时候要判断值是否相等，不能直接节点用=
from typing import Optional
class TreeNode:
     def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        if not root:  #root为空树，则为真
            return True
        def isMirror(left:Optional[TreeNode],right:Optional[TreeNode]):
            if left is None and right is None:
                return True
            if left is None or right is None:
                return False
            #三个条件都满足时，才返回True
            return left.val == right.val and isMirror(left.left,right.right) and isMirror(left.right,right.left)
        return isMirror(root.left,root.right)
        
