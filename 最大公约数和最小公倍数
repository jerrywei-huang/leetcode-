"""
编写一个程序，计算给定的最大公约数（GCD）和最小公倍数（LCM）
a和b
输入的第一行给出案例数，N。
测试用例如下。

每个测试用例包含两个整数 a 和 b，一行中用一个空格分隔。
"""

def gcd(a,b):
    #计算最大公约数
    """
    它采用欧几里得算法，通过连续取模的方式找到最大公约数。算法的步骤如下：
    当 b 不为零时，用 a 除以 b 得到余数，将 b 赋值给 a，将余数赋值给 b。
    重复上述步骤，直到 b 变为零，此时 a 即为最大公约数。
    """
    while b:
        a,b = b,a%b
    return a
def lcm(a,b):
    #最小公倍数：两数乘积除以最大公约数。//是取整数部分
    return a*b//gcd(a,b)
T = int(input())
for _ in range(T):
    #读取一行输入，并用空格分隔
    a,b = map(int,input().split())
    gcd_val = gcd(a,b)
    lcm_val = lcm(a,b)
    print(gcd_val,lcm_val)
