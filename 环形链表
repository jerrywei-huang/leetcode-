"""
给你一个链表的头节点 head ，判断链表中是否有环。

如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。注意：pos 不作为参数进行传递 。仅仅是为了标识链表的实际情况。

如果链表中存在环 ，则返回 true 。 否则，返回 false 。
"""

#使用快慢指针来解决
from typing import Optional

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def hasCycle(self,head:Optional[ListNode]) ->bool:
        slow=fast=head
        while fast and fast.next:
            slow=slow.next  #slow走两步
            fast=fast.next.next #fast走两步
            if fast is slow:
                return True #有环
        return False #无环
  
