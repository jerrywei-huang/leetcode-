"""
给你一个字符串数组 tokens ，表示一个根据 逆波兰表示法 表示的算术表达式。

请你计算该表达式。返回一个表示表达式值的整数。
"""

from typing import List
class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        result = 0
        if not tokens:
            return 0
        stack = []
        operations = {'+','-','*','/'}
        
        for token in tokens:
            #如果是操作数就压入栈
            if token not in operations:
                stack.append(int(token))
            else:
                num2 = stack.pop()
                num1 = stack.pop()
                if token == '+':
                    stack.append(num1+num2)
                if token == '-':
                    stack.append(num1-num2)
                if token == '*':
                    stack.append(num1*num2)
                if token == '/':
                    stack.append(int(num1/num2))
        #stack[0]是最顶端元素，也是唯一元素
        return result
